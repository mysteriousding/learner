/*
//BM62 斐波那契数列
//
//描述
//大家都知道斐波那契数列，现在要求输入一个正整数 n ，请你输出斐波那契数列的第 n 项。
//斐波那契数列是一个满足
//       {         1           x=1,2
//fib(x)={                             的数列
//       { fib(x−1)+fib(x−2)  x>2
//
//数据范围：1≤n≤40
//要求：空间复杂度 O(1)，时间复杂度 O(n) ，本题也有时间复杂度 O(logn) 的解法
//
//输入描述：
//一个正整数n
//返回值描述：
//输出一个正整数。
//示例1
//输入：
//4
//
//返回值：
//3
//
//说明：
//根据斐波那契数列的定义可知，fib(1)=1,fib(2)=1,fib(3)=fib(3-1)+fib(3-2)=2,fib(4)=fib(4-1)+fib(4-2)=3，所以答案为3。
//
//
//示例2
//输入：
//1
//
//返回值：
//1
//
//
//示例3
//输入：
//2
//复制
//返回值：
//1

class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     *
     * @param n int整型
     * @return int整型
     *
int Fibonacci(int n) {
    int a = 1, b = 1, c = 1;
    for (int i = 3; i <= n; i++)
        a = b, b = c, c = a + b;
    return c;
}
};
*/

/*
//BM63 跳台阶
//
//描述
//一只青蛙一次可以跳上1级台阶，也可以跳上2级。
//求该青蛙跳上一个 n 级的台阶总共有多少种跳法（先后次序不同算不同的结果）。
//
//数据范围：1≤n≤40
//要求：时间复杂度：O(n) ，空间复杂度：O(1)
//示例1
//输入：
//2
//
//返回值：
//2
//
//说明：
//青蛙要跳上两级台阶有两种跳法，分别是：先跳一级，再跳一级或者直接跳两级。
//因此答案为2
//
//
//示例2
//输入：
//7
//
//返回值：
//21

class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     *
     * @param number int整型
     * @return int整型
     *
int jumpFloor(int number) {
    int a = 0, b = 1, c = 1;
    for (int i = 2; i <= number; i++)
        a = b, b = c, c = a + b;
    return c;
}
};
*/