/*
循环位移

问题描述
给定一个正好六位的正整数 x，请将 x 循环左移一位后输出。

所谓循环左移一位，是指将原来的十万位变为个位，原来的万位到个位向左移动依次变为十万位到十位。

例如：
194910 左移一位变为 949101 。

又如：
987123 987123 左移一位变为 871239 。

输入格式
输入一行包含一个整数 x 。
保证输入的 x 正好包含 6 个十进制数位，而且十万位和万位上的数字均不为 0 。

输出格式
输出一行包含一个整数，表示答案。

样例输入
194910

样例输出
949101
*/
#include <iostream>
using namespace std;
int main()
{
	int n;
	cin >> n;
	cout << n % 100000 * 10 + n / 100000 << endl;

	return 0;

}

