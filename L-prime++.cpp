/*
问题描述
在蓝桥杯的国赛场上，有两名选手，小蓝和小桥，凭借着对算法的深刻理解，双双获得了满分。
只是，按照蓝桥杯国赛的既定规则，特等奖名额仅有一个，只能有一位选手能够获此殊荣。

对此，组委会经过一番商讨，决定临时增设一道题目，期望通过这道题目来决出最终的特等奖归属。

新增题目的内容是这样的：给定一个正整数n，要求找出一个最小的、大于1 的正整数，使得这个数不能被前n 个质数整除。

题目十分简短，但让人意想不到的是，组委会出完题后，突然发现这道题有点难度，他们忘记了答案，或者说，他们根本不会计算答案…场面一度十分尴尬。

现在，组委会焦急地等待着你的帮助。请你写出程序，帮助组委会找到这个数，让这场精彩的蓝桥杯国赛画上一个圆满的句号。

输入格式
输入一个整数
n(1≤n≤10^5)，表示给定的数字。

输出格式
输出一个整数，表示最小的、大于
1的自然数，使得这个数不能被前n 个质数整除。

样例输入
2
copy
样例输出
5
*/
#include <iostream>
using namespace std;
bool zs(long long n);
int main()
{
	long long n, i = 1, j = 0;
	cin >> n;
	for (;;)
		if (zs(i++))
			if (j++ == n + 1) { cout << i - 1 << endl; break; }

	return 0;
}

bool zs(long long n)
{
	for (long long i = 2; i * i <= n; i++)
		if (n % i == 0)return 0;
	return 1;
}