/*
屏蔽信号【算法赛】

问题描述
在与三体文明的对抗中，人类联邦探测到了两个重要的信号源，分别用非负整数 a 和  来表示。

为了抵御三体舰队的入侵，科学家们制定出一项关键策略——屏蔽信号，目标是要让 a、b 这两个信号源其中之一的数值归零。
在实施屏蔽操作时，有着一套既定规则：
每次操作，科学家们需要先对比两个信号源的数值大小，然后用较大的那个数减去较小的数，得出差值之后，再把原本较大的那个数替换成这个差值。
就这样反复操作，一轮一轮进行下去。

现在，请你来帮忙计算一下，按照这样的操作方式，要想实现将两个信号源之中任意一个变为零，所需要进行的最少操作次数是多少呢？

输入格式
第一行包含一个整数 t（ 1≤t≤10^3 ），表示测试数据的数量。

接下来的 t 行，每行包含两个非负整数 a 和 b（ 0≤a,b≤10^9 ），表示两个关键的信号源。

输出格式
对于每组测试数据，输出一个整数，表示将其中一个信号源变为零所需的最小操作次数，每个结果占一行。

样例输入
3
0 3
2 5
3 6

样例输出
0
4
2
*/
#include <iostream>
using namespace std;
int main()
{
    int n, m, t, h, i;
    cin >> t;
    while (t--)
    {
        cin >> n >> m;
        if (n < m)
            h = n, n = m, m = h;
        i = 0;
        while (n && m)
        {
            n -= m;
            h = n, n = m, m = h;
            i++;
        }
        cout << i << endl;
    }

    return 0;
}
