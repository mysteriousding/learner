/*
【编程大题】信用卡号验证
当你输入信用卡号码的时候，有没有担心输错了而造成损失呢？其实可以不必这么担
心，因为并不是一个随便的信用卡号码都是合法的，它必须通过 Luhn 算法来验证通过。
该校验的过程：
1、从卡号最后一位数字开始，逆向将奇数位(1、3、5 等等)相加。
2、从卡号最后一位数字开始，逆向将偶数位数字，先乘以 2（如果乘积为两位数，则
将其减去 9），再求和。
3、将奇数位总和加上偶数位总和，结果应该可以被 10 整除。
例如，卡号是：5432123456788881
则奇数、偶数位（用红色标出）分布：5432123456788881
奇数位和=35
偶数位乘以 2（有些要减去 9）的结果：1 6 2 6 1 5 7 7，求和=35。
最后 35+35=70 可以被 10 整除，认定校验通过。
请编写一个程序，从标准输入获得卡号，然后判断是否校验通过。通过显示：“成功”，
否则显示“失败”。 第 5/15 页
比如，用户输入：356827027232780
程序输出：成功
【程序测试参考用例】
356406010024817 成功
358973017867744 成功
356827027232781 失败
306406010024817 失败
358973017867754 失败

*/
#include<iostream>
#include<string>
using namespace std;
int main()
{
	int n = 0,k;
	string m;
	getline(cin, m);
	for (int i = m.size() - 1; i >= 0; i -= 2)
		n += (m[i] - '0');
	for (int i = m.size() - 2; i >= 0; i -= 2)
	{
		k = (m[i] - '0') * 2;
		if (k >= 10)k -= 9;
		n += k;
	}
	cout << (n % 10 ? "失败" : "成功") << endl;


	return 0;
}
