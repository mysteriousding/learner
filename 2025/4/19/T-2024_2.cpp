/*(6)
//L1-102 兰州牛肉面
//分数 15
//作者 陈越
//单位 浙江大学
//https://images.ptausercontent.com/d1328436-a9b9-4df4-8c78-f10e64fd0169.png
//
//兰州牛肉面是历史悠久的美食，根据牛肉面的宽窄、配料的种类，可以细分为上百个不同的品种。
//你进到兰州的任何一家牛肉面馆，只说：“来一碗牛肉面！”就好像进到加州的咖啡馆说“来一杯咖啡”一样，会被店主人当成外星人……
//本题的任务是，请你写程序帮助一家牛肉面馆的老板统计一下，他们一天卖出各种品种的牛肉面有多少碗，营业额一共有多少。
//
//输入格式：
//输入第一行给出一个正整数 N（≤100），为牛肉面的种类数量。
//这里为了简单起见，我们把不同种类的牛肉面从 1 到 N 编号，以后就用编号代替牛肉面品种的名称。
//第二行给出 N 个价格，第 i 个价格对应第 i 种牛肉面一碗的单价。这里的价格是 [0.01, 200.00] 区间内的实数，以元为单位，精确到分。
//随后是一天内客人买面的记录，每条记录占一行，格式为：
//
//品种编号 碗数
//其中碗数保证是正整数。
//当对应的 品种编号 为 0 时，表示输入结束。这个记录不算在内。
//
//输出格式：
//首先输出 N 行，第 i 行输出第 i 种牛肉面卖出了多少碗。
//最后一行输出当天的总营业额，仍然是以元为单位，精确到分。
//题目保证总营业额不超过 10^6 。
//
//输入样例：
//5
//4.00 8.50 3.20 12.00 14.10
//3 5
//5 2
//1 1
//2 3
//2 2
//1 9
//0 0
//输出样例：
//10
//5
//5
//0
//2
//126.70

#include<iostream>
#include<iomanip>
using namespace std;
int main()
{
    int n,b[105]={0},x,y;
    double a[105],w=0;
    cin>>n;
    for(int i=1;i<=n;i++)
        cin>>a[i];
    while(cin>>x>>y)
    {
        if(!x)break;
        b[x]+=y;
        w+=y*a[x];
    }
    for(int i=1;i<=n;i++)
        cout<<b[i]<<endl;
    cout<<setiosflags(ios::fixed)<<setprecision(2)<<w<<endl;

    return 0;
}
*/

/*(7)
//L1-103 整数的持续性
//分数 20
//作者 陈越
//单位 浙江大学
//从任一给定的正整数 n 出发，将其每一位数字相乘，记得到的乘积为 n1。
//以此类推，令 ni+1 为 ni 的各位数字的乘积，直到最后得到一个个位数 m ，则 m 就称为 n 的持续性。
//例如 679 的持续性就是 5，因为我们从 679 开始，得到 6×7×9=378，随后得到 3×7×8=168、1×6×8=48、4×8=32，最后得到 3×2=6，一共用了 5 步。
//本题就请你编写程序，找出任一给定区间内持续性最长的整数。
//
//输入格式：
//输入在一行中给出两个正整数 a 和 b（1≤a≤b≤10^9 且 (b−a)<10^3 ），为给定区间的两个端点。
//
//输出格式：
//首先在第一行输出区间 [a,b] 内整数最长的持续性。
//随后在第二行中输出持续性最长的整数。
//如果这样的整数不唯一，则按照递增序输出，数字间以 1 个空格分隔，行首尾不得有多余空格。
//
//输入样例：
//500 700
//输出样例：
//5
//679 688 697

#include<iostream>
using namespace std;
int Max=0,q[1005],p=0;
void cx(int t)
{
    int x=t,y,z=0;
    while(x>=10)
    {
        z++,y=1;
        while(x)
        {
            y*=x%10;
            x/=10;
        }
        x=y;
    }
    if(z==Max)q[p++]=t;
    else if(z>Max)
    {
        Max=z;
        p=0;
        q[p++]=t;
    }
}
int main()
{
    int a,b;
    cin>>a>>b;
    for(int i=a;i<=b;i++)
        cx(i);
    cout<<Max<<endl;
    for(int i=0;i<p;i++)
    {
        if(i)cout<<" ";
        cout<<q[i];
    }

    return 0;
}
*/

/*(8)
//L1-104 九宫格
//分数 20
//作者 陈越
//单位 浙江大学
//https://images.ptausercontent.com/e65e5dd5-2a8e-474e-bfe1-2b1ef3be3dba.jpg
//
//九宫格是一款数字游戏，传说起源于河图洛书，现代数学中称之为三阶幻方。
//游戏规则是：将一个 9×9 的正方形区域划分为 9 个 3×3 的正方形宫位，要求 1 到 9 这九个数字中的每个数字在每一行、每一列、每个宫位中都只能出现一次。
//本题并不要求你写程序解决这个问题，只是对每个填好数字的九宫格，判断其是否满足游戏规则的要求。
//
//输入格式：
//输入首先在第一行给出一个正整数 n（≤10），随后给出 n 个填好数字的九宫格。
//每个九宫格分 9 行给出，每行给出 9 个数字，其间以空格分隔。
//
//输出格式：
//对每个给定的九宫格，判断其中的数字是否满足游戏规则的要求。
//满足则在一行中输出 1，否则输出 0。
//
//输入样例：
//3
//5 1 9 2 8 3 4 6 7
//7 2 8 9 6 4 3 5 1
//3 4 6 5 7 1 9 2 8
//8 9 2 1 4 5 7 3 6
//4 7 3 6 2 8 1 9 5
//6 5 1 7 3 9 2 8 4
//9 3 4 8 1 6 5 7 2
//1 6 7 3 5 2 8 4 9
//2 8 5 4 9 7 6 1 3
//8 2 5 4 9 7 1 3 6
//7 9 6 5 1 3 8 2 4
//3 4 1 6 8 2 7 9 5
//6 8 4 2 7 1 3 5 9
//9 1 2 8 3 5 6 4 7
//5 3 7 9 6 4 2 1 8
//2 7 9 1 5 8 4 6 3
//4 5 8 3 2 6 9 7 1
//1 6 3 7 4 9 5 8 3
//81 2 5 4 9 7 1 3 6
//7 9 6 5 1 3 8 2 4
//3 4 1 6 8 2 7 9 5
//6 8 4 2 7 1 3 5 9
//9 1 2 8 3 5 6 4 7
//5 3 7 9 6 4 2 1 8
//2 7 9 1 5 8 4 6 3
//4 5 8 3 2 6 9 7 1
//1 6 3 7 4 9 5 8 2
//输出样例：
//1
//0
//0

#include<iostream>
using namespace std;
int main()
{
    int n,a[10][10],u,b[10];
    cin>>n;
    while(n--)
    {
        u=1;
        for(int i=1;i<=9;i++)
            for(int j=1;j<=9;j++)
                cin>>a[i][j];
        for(int i=1;i<=9;i++)
        {
            for(int i=1;i<=9;i++)
                b[i]=0;
            for(int j=1;j<=9;j++)
                b[a[i][j]]=1;
            for(int j=1;j<=9;j++)
                if(!b[j])
                {
                    u=0;
                    break;
                }
            if(!u)break;
        }
        if(!u)
        {
            cout<<u<<endl;
            continue;
        }
        for(int i=1;i<=9;i++)
        {
            for(int i=1;i<=9;i++)
                b[i]=0;
            for(int j=1;j<=9;j++)
                b[a[j][i]]=1;
            for(int j=1;j<=9;j++)
                if(!b[j])
                {
                    u=0;
                    break;
                }
            if(!u)break;
        }
        if(!u)
        {
            cout<<u<<endl;
            continue;
        }
        for(int x=0;x<3;x++)
        {
            for(int y=0;y<3;y++)
            {
                for(int i=1;i<=9;i++)
                b[i]=0;
                for(int i=x*3+1;i<=x*3+3;i++)
                    for(int j=y*3+1;j<=y*3+3;j++)
                        b[a[i][j]]=1;
                for(int j=1;j<=9;j++)
                if(!b[j])
                {
                    u=0;
                    break;
                }
                if(!u)break;
            }
            if(!u)break;
        }
        cout<<u<<endl;
    }

    return 0;
}
*/
