/*(6)多分支结构编程

//按照考试分数分档，90-100为A，80-89为B，70-79为C，60-69为D，0-59为E。假设分数均为整数，跟输入的分数，输出分档结果。
//
//输入格式:
//输入0-100之间的整数
//
//输出格式:
//输出相应的分档结果,若输入0-100以外的数字，则输出error
//
//输入样例:
//在这里给出一组输入。例如：
//
//75
//输出样例:
//在这里给出相应的输出。例如：
//
//C

#include<iostream>
using namespace std;
int main()
{
    int n;
    cin>>n;
    if(n==100)n=99;
    n/=10;
    switch(n)
    {
        case 9:cout<<"A";break;
        case 8:cout<<"B";break;
        case 7:cout<<"C";break;
        case 6:cout<<"D";break;
        case 5:
        case 4:
        case 3:
        case 2:
        case 1:
        case 0:cout<<"E";break;
        default :cout<<"error";
    }
    cout<<endl;

    return 0;
}
*/

/*(7)小型轿车泊车收费问题

//某市发改委公布了市级政府定价管理的经营服务性收费规定：公共文化、交通、体育、医疗等公共设施配套停车场（库、泊位）的停车场所收费：
//一类区域1小时内5元，超过1小时后，每半小时加收2元（不足半小时的，按半小时计），24小时最高收费50元； 
//二类区域2小时内5元，超过2小时后，每小时加收2元（不足1小时的，按1小时计），24小时最高收费30元；
//三类区域3小时内5元，超过3小时后，每小时加收1元（不足1小时的，按1小时计），24小时最高收费20元。
//请根据泊车区域类别与泊车时长计算收费金额。
//
//输入格式:
//输入泊车区域类别(整数：1，2，3)与泊车时长（实数）。一类区域以半小时为单位，例如：泊车时长2.3小时，应输入2.5；二类、三类区域以1小时为单位，例如：泊车时长2.3小时，应输入3 ）
//
//输出格式:
//根据泊车区域类别与泊车时长计算收费金额（保留两位小数）
//
//输入样例1:
//1 3.5
//输出样例1:
//15.00
//输入样例2:
//2 18
//输出样例2:
//30.00
//输入样例3:
//3  78
//输出样例3:
//68.00

#include<iostream>
using namespace std;
int main()
{
    int n,k;
    float m;
    cin>>n>>m;
    k=m/24;
    m-=24*k;
    switch(n)
    {
        case 1:cout<<5+k*50+(((m-1)*4>45)?45:(m-1)*4);break;
        case 2:cout<<5+k*30+(((m-2)*2>25)?25:(m-2)*2);break;
        case 3:cout<<5+k*20+((m-3>15)?15:m-3);break;
    }

    cout<<".00"<<endl;

    return 0;
}
*/

/*(8)分段函数求值

//计算下面分段函数的值
//
//   { x/3 + 1 ,         x < -2
//y ={ 2x + 1/3 ,      -2 <= x < 2
//   { x/7 - 1 ,         x >= 2
//
//输入变量x的值，然后输出对应的函数值y（输出4位小数）。
//
//输入格式:
//变量x的值。
//
//输出格式:
//对应的函数值y。
//
//输入样例:
//例如：
//
//3
//输出样例:
//-0.5714

#include<iostream>
#include<iomanip>
using namespace std;
int main()
{
    float n,m;
    cin>>n;
    if(n>=2)m=n/7.0-1;
    else if(n<-2)m=n/3.0+1;
    else m=2*n+1.0/3;

    cout<<setiosflags(ios::fixed)<<setprecision(4)<<m+1e-6<<endl;

    return 0;
}
*/

/*(9)帮助色盲

//在古老的红绿灯面前，红绿色盲患者无法分辨当前亮起的灯是红色还是绿色，有些聪明人通过路口的策略是这样的：当红灯或绿灯亮起时，灯的颜色无法判断，但前方两米内有同向行走的人，就跟着前面那人行动，人家走就跟着走，人家停就跟着停；如果当前是黄灯，那么很快就要变成红灯了，于是应该停下来。麻烦的是，当灯的颜色无法判断时，前方两米内没有人……
//本题就请你写一个程序，通过产生不同的提示音来帮助红绿色盲患者判断当前交通灯的颜色；但当患者可以自行判断的时候（例如黄灯或者前方两米内有人），就不做多余的打扰。具体要求的功能为：当前交通灯为红灯或绿灯时，检测其前方两米内是否有同向行走的人 —— 如果有，则患者自己可以判断，程序就不做提示；如果没有，则根据灯的颜色给出不同的提示音。黄灯也不需要给出提示。
//
//输入格式：
//输入在一行中给出两个数字 A 和 B，其间以空格分隔。其中 A 是当前交通灯的颜色，取值为 0 表示红灯、1 表示绿灯、2 表示黄灯；B 是前方行人的状态，取值为 0 表示前方两米内没有同向行走的人、1 表示有。
//
//输出格式：
//根据输入的状态在第一行中输出提示音：dudu 表示前方为绿灯，可以继续前进；biii 表示前方为红灯，应该止步；- 表示不做提示。在第二行输出患者应该执行的动作：move 表示继续前进、stop 表示止步。
//
//输入样例 1：
//0 0
//输出样例 1：
//biii
//stop
//输入样例 2：
//1 1
//输出样例 2：
//-
//move

#include<iostream>
using namespace std;
int main()
{
    int n,m;
    cin>>n>>m;
    if(n==2||m==1)cout<<"-";
    else if(n==0)cout<<"biii";
    else cout<<"dudu";
    cout<<endl;
    if(n==1)cout<<"move";
    else cout<<"stop";

    return 0;
}
*/

//求两个数中的较大者
//
//请完成下列代码的语句填空：
//
//#include <stdio.h>
//
//int main()
//{
//    int a, b, max;
//    scanf("%d", &a);
//    scanf("%d", &b);
//    //请填空
//    //使用双路选择或者单路选择，将a和b中较大者赋给max
//    // 注意，只用条件语句完成赋值，不要使用printf
//
//    printf("%d和%d的较大值是：%d\n", a, b, max);
//    return 0;
//}
//
//
//输入样例:
//例如：
//
//18
//12
//输出样例:
//例如：
//
//18和12的较大值是：18

#include<stdio.h>
using namespace std;
int main()
{
    int a, b, max;
    scanf("%d", &a);
    scanf("%d", &b);
    max = a > b ? a : b;
    printf("%d和%d的较大值是：%d\n", a, b, max);

    return 0;
}
