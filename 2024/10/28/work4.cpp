/*（6）素数对

//两个相差为2的素数称为素数对，如5和7，17和19等，本题目要求找出所有两个数均不大于n的素数对。
//
//输入格式:
//一个正整数n。1 <= n <= 30000。
//
//输出格式:
//所有小于等于n的素数对。每对素数对输出一行，中间用单个空格隔开。若没有找到任何素数对，输出empty。
//
//输入样例:
//在这里给出一组输入。例如：
//
//100
//输出样例:
//在这里给出相应的输出。例如：
//
//3 5
//5 7
//11 13
//17 19
//29 31
//41 43
//59 61
//71 73

#include<iostream>
using namespace std;
int main()
{
    int n, x = 0, y = 0, p = 0, k = 0;
    cin >> n;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 2; j <= i / 2; j++)
        {
            if (i % j == 0)
            {
                p = 1;
                break;
            }
        }
        if (p == 0)
        {
            y = x; x = i;
            if (k == 2)k = 1;
        }
        p = 0;
        if (x - y == 2 && k != 2)
        {
            if (k == 1)cout << endl;
            cout << y << " " << x;
            k = 2;
        }
    }

    if (k == 0) { cout << "empty" << endl; }

    return 0;
}
*/

/*(7)利用John Wallis近似公式计算圆周率

//利用(π/2) =(2/1)*(2/3)*(4/3)*(4/5)*(6/5)*(6/7)*(8/7)*(8/9)…
//
//计算π的值
//
//输入格式:
//输入在一行中给出1个正整数n,表示计算序列前n项的乘积。
//
//输出格式:
//在一行中输出双精度浮点数的值，保留小数点后4位。
//
//输入样例:
//100
//输出样例:
//3.1261

#include<iostream>
#include<iomanip>
using namespace std;
int main()
{
    int n;
    cin >> n;
    double m = 1, x = 0, y = 1;
    for (int i = 1; i <= n; i++)
    {
        if (i % 2 == 1) { x += 2; }
        else { y += 2; }
        m *= x / y;
    }

    cout << setiosflags(ios::fixed) << setprecision(4) << 2 * m << endl;

    return 0;
}
*/

/*(8)整数段求和

//给定两个整数 m 和 n，计算并输出从 m 到 n 的所有整数之和。当 m>n 时结果总是 0。
//
//输入格式:
//输入在一行中给出两个绝对值不超过 1000 的整数 m 和 n。
//
//输出格式:
//在一行中输出从 m 到 n 的所有整数之和。
//
//输入样例 1:
//3 5
//输出样例 1:
//12
//输入样例 2:
//5 5
//输出样例 2:
//5
//输入样例 3:
//8 5
//输出样例 3:
//0

#include<iostream>
using namespace std;
int main()
{
    int n, m, num = 0;
    cin >> n >> m;
    for (int i = n; i <= m; i++)
    {
        num += i;
    }

    cout << num << endl;

    return 0;
}
*/

/*(9)循环结构练习06 输出1980年到2050年之间所有闰年

//输出1980年到2050年之间所有闰年，注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。
//
//输入格式:
//本题目没有输入。
//
//输出格式:
//输出1980年到2050年之间所有闰年，要求每输出一个年份就需要换行。
//
//输入样例:
//本题目没有输入。
//
//本题目没有输入。
//输出样例:
//在这里给出相应的输出。例如：
//
//1980
//1984
//1988
//1992
//1996
//2000
//2004
//2008
//2012
//2016
//2020
//2024
//2028
//2032
//2036
//2040
//2044
//2048

#include<iostream>
using namespace std;
int main()
{
    int n = 0;
    for (int i = 1980; i <= 2050; i++)
    {
        if (i % 400 == 0 || (i % 4 == 0 && i % 100 != 0))
        {
            if (n != 0) { cout << endl; }
            cout << i;
            n = 1;
        }
    }

    return 0;
}
*/

//字符个数统计
//
//从键盘输入一串字符，统计出其中的英文字母个数、数字字符个数以及其他字符个数并输出。
//
//输入格式:
//输入一行字符，以回车结束。
//
//输出格式:
//输出英文字母个数、数字字符个数以及其他字符个数，中间用逗号进行分隔。
//
//输入样例:
//abzxAXZ0123456789&&&&%%%@@@
//输出样例:
//7,10,10

#include<iostream>
#include<string>
using namespace std;
int main()
{
    string n;
    char m;
    int j, x = 0, y = 0, z = 0;
    cin >> n;
    j = n.size();
    for (int i = 0; i < j; i++)
    {
        m = n[i];
        if ((65 <= m && m <= 90) || (97 <= m && m <= 122))
        {
            x += 1;
        }
        else if (48 <= m && m <= 57)
        {
            y += 1;
        }
        else { z += 1; }
    }

    cout << x << "," << y << "," << z << endl;

    return 0;
}
