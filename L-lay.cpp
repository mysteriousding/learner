/*
铺设道路

题目描述
春春是一名道路工程师，负责铺设一条长度为 n 的道路。

铺设道路的主要工作是填平下陷的地表。
整段道路可以看作是 n 块首尾相连的区域，一开始，第 i 块区域下陷的深度为 di 。

春春每天可以选择一段连续区间 [L,R]，填充这段区间中的每块区域，让其下陷深度减少 1。
在选择区间时，需要保证，区间内的每块区域在填充前下陷深度均不为 0 。

春春希望你能帮他设计一种方案，可以在最短的时间内将整段道路的下陷深度都变为 0 。

输入描述
输入包含两行，第一行包含一个整数 n，表示道路的长度。

第二行包含  个整数，相邻两数间用一个空格隔开，第 i 个整数为 di 。

其中，1≤n≤10^5 ，0≤di≤10^4 。

输出描述
输出仅包含一个整数，即最少需要多少天才能完成任务。

输入输出样例
示例

输入
6
4 3 2 5 3 5

输出
9

样例解释
一种可行的最佳方案是，依次选择：[1,6]、[1,6]、[1,2]、[1,1]、[4,6]、[4,4]、[4,4]、[6,6]、[6,6]。
*/
// #include <iostream>
// using namespace std;
// int main()
// {
//   int n,a[10005],h=0,m=0,j;
//   cin>>n;
//   for(int i=0;i<n;i++)
//   cin>>a[i];
//   while(h<n-1||a[n-1])
//   {
//     m++,j=h;
//     while(j<n)
//     if(a[j])
//     {
//       h=j;
//       break;
//     }
//     else j++;
//     while(j<n)
//     if(!a[j])break;
//     else a[j++]--;
//   }
//   cout<<m<<endl;

//   return 0;
// }



#include <iostream>
using namespace std;
int main()
{
	int n, a[100050], m = 0;
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 1; i < n; i++)
		if (a[i] > a[i - 1])
			m += a[i] - a[i - 1];
	cout << m + a[0] << endl;

	return 0;
}
